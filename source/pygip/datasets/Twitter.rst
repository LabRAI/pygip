Twitter
=======

Implementation for the Twitter network dataset using FakeNewsDataset.

A graph dataset representing Twitter data for fake news detection.

**Parameters**

api_type : str
    API selection ('dgl' or 'torch_geometric').
path : str
    Dataset directory path.

**Methods**

.. py:method:: load_dgl_data()

    Load Twitter dataset using DGL's FakeNewsDataset (gossipcop type with bert features).
    Adds self-loops to the graph, selects and assigns node features and labels based on node IDs,
    and generates training and test masks.

.. py:method:: generate_train_test_masks()

    Generates train and test masks based on train_ratio.
    
    Note: This method is referenced in the code but not fully defined in the provided snippet.

**Attributes**

.. py:attribute:: graph
    :type: dgl.DGLGraph

    The graph data structure with self-loops added.

.. py:attribute:: dataset_name
    :type: str

    Name of the dataset ("twitter").

.. py:attribute:: train_ratio
    :type: float

    Ratio of nodes used for training (0.8).

.. py:attribute:: node_number
    :type: int

    Number of nodes in the graph.

.. py:attribute:: feature_number
    :type: int

    Dimension of node features.

.. py:attribute:: label_number
    :type: int

    Number of unique node labels.

.. py:attribute:: features
    :type: torch.Tensor

    Node feature matrix.

.. py:attribute:: labels
    :type: torch.Tensor

    Node label tensor.

.. py:attribute:: train_mask
    :type: torch.Tensor

    Boolean mask indicating training nodes, generated by generate_train_test_masks().

.. py:attribute:: test_mask
    :type: torch.Tensor

    Boolean mask indicating testing nodes, generated by generate_train_test_masks().